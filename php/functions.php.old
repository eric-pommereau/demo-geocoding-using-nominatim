<?php

    class MassGeocodeCSVReader {
        
        private $handle;
        private $aHead;
        private $aLines;
        
        public function __construct($fileName) {
            try {
                $this->aLines = array();
                
                // ouverture du fichier
                $handle = fopen($fileName, 'r');
                
                if($handle == false) throw new Exception("Fichier non trouvé", 1);
                
                
                $row = 0;
    
                // parcours du fichier
                while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
                    if($row != 0) $this->aLines[] = $data;
                    else $this->aHead = $data;
                    $row++;
                }
                
                fclose($handle);
                
                echo count($this->aLines) . ' lignes traitées';
                
            }catch(Exception $ex) {
                throw $ex;
            }
        }
        
        public function getLines() {
            return $this->aLines;
        }
        
        public function getHead() {
            return $this->aHead;
        }
    }

    class MassGeocodeCSVWriter {
        private $aHead;
        private $aLines = array();
        private $fileName;
        
        public function __construct($fileName) {
            try {
                $handle = fopen($fileName, 'w');
                if($handle == false) throw new Exception("Impossible d'ouvrir le fichier", 1);
                fclose($handle);
                $this->fileName = $fileName;
            }catch(Exception $ex) {
                throw $ex;
            }
        }
        
        public function addHeader($aFields) {
            $this->aHead = $aFields;
        }
        
        public function addLine($aLine) {
            // Contrôler le nombre d'éléments ()
            $this->aLines[] = $aLine;
        }
        
        public function write() {
            $handle = fopen($this->fileName, 'w');

            fputcsv($handle, $this->aHead);
            
            foreach ($this->aLines as $aRow) {
                fputcsv($handle, $aRow);    
            }
            
            fclose($handle);
        }
    }
    
    class MassGeocodeNominatimGeocoder {
        private $nominatimUrl = 'http://nominatim.openstreetmap.org/search';
        private $params = array();
        
        public function __construct ($params=null){
            // Ajouter les paramètres souhaités ici
            $this->params['format'] = 'json';
        }
        
        public function geocode($address) {
            $this->params['q'] = $address; 
            
            $aParams = array();
            
            foreach ($this->params as $key => $value) {
                $aParams[] = $key . '=' . urlencode($value);
            }
            
            $uri = $this->nominatimUrl . '?' . implode('&', $aParams);
            
            $json_result = file_get_contents($uri);
            
            return json_decode($json_result);
        }
    }
    
    
